
pe=null;
var pit=5,en=[],x,xx,z,zz;
function modTick(){
	for(let i=0,l=en.length;i<l;i+=1){
		x=Entity.getX(en[i]);xx=Player.getX();
		z=Entity.getZ(en[i]);zz=Player.getZ();
		if((x-xx)*(x-xx)+(z-zz)*(z-zz)<10)
		Entity.addEffect(en[i],7,1,0,0,false);
		}
	pit=(Entity.getPitch(pe)*-1+90)/18;
	ModPE.showTipMessage(pit+"");
}
function newLevel(){
	pe=getPlayerEnt();
	}
function entityRemovedHook(ent){
	const c=en.indexOf(ent);
	if(c!==-1)en.splice(c,1);
}
function entityAddedHook(ent){
	const i=Entity.getEntityTypeId(ent);
	if(9<i&&i<17)en.push(ent);
}
function drawBox(gl10){
	
	const GL10=javax.microedition.khronos.opengles.GL10;
	
	//頂点バッファの指定
	gl10.glVertexPointer(3,GL10.GL_FLOAT,0,vertexBuffer);
	
	//面0の描画
	gl10.glColor4f(0,1,0,1);
	indexBuffer.position(0);
	// GL_TRIANGLE_STRIP 連続した三角形を描写
	// GL_UNSIGNED_BYTE バイトバッファから取得
	gl10.glDrawElements(GL10.GL_TRIANGLE_STRIP,
		10,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	//面1の描画
	gl10.glColor4f(0,0,1,1);
	indexBuffer.position(6);
	gl10.glDrawElements(GL10.GL_TRIANGLE_STRIP,
		6,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	//面2の描画
	gl10.glColor4f(1,0,0,1);
	indexBuffer.position(12);
	gl10.glDrawElements(GL10.GL_TRIANGLE_STRIP,
		6,GL10.GL_UNSIGNED_BYTE,indexBuffer);

	gl10.glColor4f(1,0,0,1);
	indexBuffer.position(0);
	gl10.glDrawElements(GL10.GL_POINTS,40,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	indexBuffer.position(40);
	gl10.glDrawElements(GL10.GL_POINTS,80,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	
	indexBuffer.position(120);
	gl10.glDrawElements(GL10.GL_POINTS,40,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	indexBuffer.position(160);
	gl10.glDrawElements(GL10.GL_POINTS,80,GL10.GL_UNSIGNED_BYTE,indexBuffer);
	*/gl10.glColor4f(1,0,0,1);
	gl10.glDrawArrays(GL10.GL_POINTS,0,400);
}

function makeFloatBuffer(array) {
	fb=java.nio.ByteBuffer.allocateDirect(array.length*4).order(
		java.nio.ByteOrder.nativeOrder()).asFloatBuffer();
	fb.put(array).position(0);
	return fb;
}

function makeByteBuffer(array){
	bb=java.nio.ByteBuffer.allocateDirect(array.length).order(
		java.nio.ByteOrder.nativeOrder());
	bb.put(array).position(0);
	return bb;
}

var aspect=0;//アスペクト比
var angle=0;//回転角度
    

var vertexBuffer;//頂点バッファ
var indexBuffer; //インデックスバッファ





/*OpenGL の レンダラーの設定*/
var renderer=new android.opengl.GLSurfaceView.Renderer({
	
/*生成時に呼ばれる*/
onSurfaceCreated(gl10,elgConfig){
	
	//gl10.glEnable(javax.microedition.khronos.opengles.GL10.GL_LIGHTING);
	//gl10.glEnable(javax.microedition.khronos.opengles.GL10.GL_LIGHTl0);
	//gl10.glEnable(javax.microedition.khronos.opengles.GL10.GL_CULL_FACE);
	//gl10.glDisable(javax.microedition.khronos.opengles.GL10.GL_CULL_FACE);
	//頂点配列の有効化
	gl10.glEnableClientState(javax.microedition.khronos.opengles.GL10.GL_VERTEX_ARRAY);
		//デプステストの有効化
		gl10.glEnable(javax.microedition.khronos.opengles.GL10.GL_DEPTH_TEST);
		//頂点バッファの生成
		
		vertexs=[
		1.0, 1.0, 1.0,//頂点0
		1.0, 1.0,-1.0,//頂点1
		-1.0, 1.0, 1.0,//頂点2
		-1.0, 1.0,-1.0,//頂点3
		1.0,-1.0, 1.0,//頂点4
		1.0,-1.0,-1.0,//頂点5
		-1.0,-1.0, 1.0,//頂点6
		-1.0,-1.0,-1.0//頂点7
		];vertexs=[
		//一段目
		10,0,0,
		9.87688,0,1.56434,
		9.51057,0,3.09017,
		8.91007,0,4.5399,
		8.09017,0,5.87785,
		7.07107,0,7.07107,
		5.87785,0,8.09017,
		4.5399,0,8.91007,
		3.09017,0,9.51057,
		1.56434,0,9.87688,
		0,0,10,
		-1.56434,0,9.87688,-3.09017,0,9.51057,-4.5399,0,8.91007,-5.87785,0,8.09017,-7.07107,0,7.07107,-8.09017,0,5.87785,-8.91007,0,4.5399,-9.51057,0,3.09017,-9.87688,0,1.56434,-10,0,0,-9.87688,0,-1.56434,-9.51057,0,-3.09017,-8.91007,0,-4.5399,-8.09017,0,-5.87785,-7.07107,0,-7.07107,-5.87785,0,-8.09017,-4.5399,0,-8.91007,-3.09017,0,-9.51057,-1.56434,0,-9.87688,0,0,-10,1.56434,0,-9.87688,3.09017,0,-9.51057,4.5399,0,-8.91007,5.87785,0,-8.09017,7.07107,0,-7.07107,8.09017,0,-5.87785,8.91007,0,-4.5399,9.51057,0,-3.09017,9.87688,0,-1.56434,
		
		9.87688,1.56434,0,9.75528,1.56434,1.54508,9.39347,1.56434,3.05212,8.80036,1.56434,4.48401,7.99056,1.56434,5.80548,6.98401,1.56434,6.98401,5.80548,1.56434,7.99056,4.48401,1.56434,8.80036,3.05212,1.56434,9.39347,1.54508,1.56434,9.75528,0,1.56434,9.87688,-1.54508,1.56434,9.75528,-3.05212,1.56434,9.39347,-4.48401,1.56434,8.80036,-5.80548,1.56434,7.99056,-6.98401,1.56434,6.98401,-7.99056,1.56434,5.80548,-8.80036,1.56434,4.48401,-9.39347,1.56434,3.05212,-9.75528,1.56434,1.54508,-9.87688,1.56434,0,-9.75528,1.56434,-1.54508,-9.39347,1.56434,-3.05212,-8.80036,1.56434,-4.48401,-7.99056,1.56434,-5.80548,-6.98401,1.56434,-6.98401,-5.80548,1.56434,-7.99056,-4.48401,1.56434,-8.80036,-3.05212,1.56434,-9.39347,-1.54508,1.56434,-9.75528,0,1.56434,-9.87688,1.54508,1.56434,-9.75528,3.05212,1.56434,-9.39347,4.48401,1.56434,-8.80036,5.80548,1.56434,-7.99056,6.98401,1.56434,-6.98401,7.99056,1.56434,-5.80548,8.80036,1.56434,-4.48401,9.39347,1.56434,-3.05212,9.75528,1.56434,-1.54508,
		
		9.51057,3.09017,0,9.39348,3.09017,1.48778,9.04509,3.09017,2.93893,8.47398,3.09017,4.31771,7.69421,3.09017,5.59017,6.72499,3.09017,6.72499,5.59017,3.09017,7.69421,4.31771,3.09017,8.47398,2.93893,3.09017,9.04509,1.48778,3.09017,9.39348,0,3.09017,9.51057,-1.48778,3.09017,9.39348,-2.93893,3.09017,9.04509,-4.31771,3.09017,8.47398,-5.59017,3.09017,7.69421,-6.72499,3.09017,6.72499,-7.69421,3.09017,5.59017,-8.47398,3.09017,4.31771,-9.04509,3.09017,2.93893,-9.39348,3.09017,1.48778,-9.51057,3.09017,0,-9.39348,3.09017,-1.48778,-9.04509,3.09017,-2.93893,-8.47398,3.09017,-4.31771,-7.69421,3.09017,-5.59017,-6.72499,3.09017,-6.72499,-5.59017,3.09017,-7.69421,-4.31771,3.09017,-8.47398,-2.93893,3.09017,-9.04509,-1.48778,3.09017,-9.39348,0,3.09017,-9.51057,1.48778,3.09017,-9.39348,2.93893,3.09017,-9.04509,4.31771,3.09017,-8.47398,5.59017,3.09017,-7.69421,6.72499,3.09017,-6.72499,7.69421,3.09017,-5.59017,8.47398,3.09017,-4.31771,9.04509,3.09017,-2.93893,9.39348,3.09017,-1.48778,
		
		8.91007,4.5399,0,8.80037,4.5399,1.39384,8.47398,4.5399,2.75336,7.93893,4.5399,4.04509,7.2084,4.5399,5.23721,6.30037,4.5399,6.30037,5.23721,4.5399,7.2084,4.04509,4.5399,7.93893,2.75336,4.5399,8.47398,1.39384,4.5399,8.80037,0,4.5399,8.91007,-1.39384,4.5399,8.80037,-2.75336,4.5399,8.47398,-4.04509,4.5399,7.93893,-5.23721,4.5399,7.2084,-6.30037,4.5399,6.30037,-7.2084,4.5399,5.23721,-7.93893,4.5399,4.04509,-8.47398,4.5399,2.75336,-8.80037,4.5399,1.39384,-8.91007,4.5399,0,-8.80037,4.5399,-1.39384,-8.47398,4.5399,-2.75336,-7.93893,4.5399,-4.04509,-7.2084,4.5399,-5.23721,-6.30037,4.5399,-6.30037,-5.23721,4.5399,-7.2084,-4.04509,4.5399,-7.93893,-2.75336,4.5399,-8.47398,-1.39384,4.5399,-8.80037,0,4.5399,-8.91007,1.39384,4.5399,-8.80037,2.75336,4.5399,-8.47398,4.04509,4.5399,-7.93893,5.23721,4.5399,-7.2084,6.30037,4.5399,-6.30037,7.2084,4.5399,-5.23721,7.93893,4.5399,-4.04509,8.47398,4.5399,-2.75336,8.80037,4.5399,-1.39384,
		
		8.09017,5.87785,0,7.99057,5.87785,1.26558,7.69421,5.87785,2.5,7.20839,5.87785,3.67286,6.54509,5.87785,4.75528,5.72061,5.87785,5.72061,4.75528,5.87785,6.54509,3.67286,5.87785,7.20839,2.5,5.87785,7.69421,1.26558,5.87785,7.99057,0,5.87785,8.09017,-1.26558,5.87785,7.99057,-2.5,5.87785,7.69421,-3.67286,5.87785,7.20839,-4.75528,5.87785,6.54509,-5.72061,5.87785,5.72061,-6.54509,5.87785,4.75528,-7.20839,5.87785,3.67286,-7.69421,5.87785,2.5,-7.99057,5.87785,1.26558,-8.09017,5.87785,0,-7.99057,5.87785,-1.26558,-7.69421,5.87785,-2.5,-7.20839,5.87785,-3.67286,-6.54509,5.87785,-4.75528,-5.72061,5.87785,-5.72061,-4.75528,5.87785,-6.54509,-3.67286,5.87785,-7.20839,-2.5,5.87785,-7.69421,-1.26558,5.87785,-7.99057,0,5.87785,-8.09017,1.26558,5.87785,-7.99057,2.5,5.87785,-7.69421,3.67286,5.87785,-7.20839,4.75528,5.87785,-6.54509,5.72061,5.87785,-5.72061,6.54509,5.87785,-4.75528,7.20839,5.87785,-3.67286,7.69421,5.87785,-2.5,7.99057,5.87785,-1.26558,
		
		7.07107,7.07107,0,6.98401,7.07107,1.10616,6.72499,7.07107,2.18508,6.30037,7.07107,3.2102,5.72062,7.07107,4.15627,5,7.07107,5,4.15627,7.07107,5.72062,3.2102,7.07107,6.30037,2.18508,7.07107,6.72499,1.10616,7.07107,6.98401,0,7.07107,7.07107,-1.10616,7.07107,6.98401,-2.18508,7.07107,6.72499,-3.2102,7.07107,6.30037,-4.15627,7.07107,5.72062,-5,7.07107,5,-5.72062,7.07107,4.15627,-6.30037,7.07107,3.2102,-6.72499,7.07107,2.18508,-6.98401,7.07107,1.10616,-7.07107,7.07107,0,-6.98401,7.07107,-1.10616,-6.72499,7.07107,-2.18508,-6.30037,7.07107,-3.2102,-5.72062,7.07107,-4.15627,-5,7.07107,-5,-4.15627,7.07107,-5.72062,-3.2102,7.07107,-6.30037,-2.18508,7.07107,-6.72499,-1.10616,7.07107,-6.98401,0,7.07107,-7.07107,1.10616,7.07107,-6.98401,2.18508,7.07107,-6.72499,3.2102,7.07107,-6.30037,4.15627,7.07107,-5.72062,5,7.07107,-5,5.72062,7.07107,-4.15627,6.30037,7.07107,-3.2102,6.72499,7.07107,-2.18508,6.98401,7.07107,-1.10616,
		
		5.87785,8.09017,0,5.80548,8.09017,0.9195,5.59017,8.09017,1.81636,5.2372,8.09017,2.66849,4.75528,8.09017,3.45491,4.15627,8.09017,4.15627,3.45491,8.09017,4.75528,2.66849,8.09017,5.2372,1.81636,8.09017,5.59017,0.9195,8.09017,5.80548,0,8.09017,5.87785,-0.9195,8.09017,5.80548,-1.81636,8.09017,5.59017,-2.66849,8.09017,5.2372,-3.45491,8.09017,4.75528,-4.15627,8.09017,4.15627,-4.75528,8.09017,3.45491,-5.2372,8.09017,2.66849,-5.59017,8.09017,1.81636,-5.80548,8.09017,0.9195,-5.87785,8.09017,0,-5.80548,8.09017,-0.9195,-5.59017,8.09017,-1.81636,-5.2372,8.09017,-2.66849,-4.75528,8.09017,-3.45491,-4.15627,8.09017,-4.15627,-3.45491,8.09017,-4.75528,-2.66849,8.09017,-5.2372,-1.81636,8.09017,-5.59017,-0.9195,8.09017,-5.80548,0,8.09017,-5.87785,0.9195,8.09017,-5.80548,1.81636,8.09017,-5.59017,2.66849,8.09017,-5.2372,3.45491,8.09017,-4.75528,4.15627,8.09017,-4.15627,4.75528,8.09017,-3.45491,5.2372,8.09017,-2.66849,5.59017,8.09017,-1.81636,5.80548,8.09017,-0.9195,
		
		4.5399,8.91007,0,4.48401,8.91007,0.7102,4.3177,8.91007,1.40291,4.04508,8.91007,2.06107,3.67286,8.91007,2.66849,3.21019,8.91007,3.21019,2.66849,8.91007,3.67286,2.06107,8.91007,4.04508,1.40291,8.91007,4.3177,0.7102,8.91007,4.48401,0,8.91007,4.5399,-0.7102,8.91007,4.48401,-1.40291,8.91007,4.3177,-2.06107,8.91007,4.04508,-2.66849,8.91007,3.67286,-3.21019,8.91007,3.21019,-3.67286,8.91007,2.66849,-4.04508,8.91007,2.06107,-4.3177,8.91007,1.40291,-4.48401,8.91007,0.7102,-4.5399,8.91007,0,-4.48401,8.91007,-0.7102,-4.3177,8.91007,-1.40291,-4.04508,8.91007,-2.06107,-3.67286,8.91007,-2.66849,-3.21019,8.91007,-3.21019,-2.66849,8.91007,-3.67286,-2.06107,8.91007,-4.04508,-1.40291,8.91007,-4.3177,-0.7102,8.91007,-4.48401,0,8.91007,-4.5399,0.7102,8.91007,-4.48401,1.40291,8.91007,-4.3177,2.06107,8.91007,-4.04508,2.66849,8.91007,-3.67286,3.21019,8.91007,-3.21019,3.67286,8.91007,-2.66849,4.04508,8.91007,-2.06107,4.3177,8.91007,-1.40291,4.48401,8.91007,-0.7102,
		
		3.09017,9.51057,0,3.05212,9.51057,0.483409,2.93893,9.51057,0.954915,2.75336,9.51057,1.40291,2.5,9.51057,1.81636,2.18508,9.51057,2.18508,1.81636,9.51057,2.5,1.40291,9.51057,2.75336,0.954915,9.51057,2.93893,0.483409,9.51057,3.05212,0,9.51057,3.09017,-0.483409,9.51057,3.05212,-0.954915,9.51057,2.93893,-1.40291,9.51057,2.75336,-1.81636,9.51057,2.5,-2.18508,9.51057,2.18508,-2.5,9.51057,1.81636,-2.75336,9.51057,1.40291,-2.93893,9.51057,0.954915,-3.05212,9.51057,0.483409,-3.09017,9.51057,0,-3.05212,9.51057,-0.483409,-2.93893,9.51057,-0.954915,-2.75336,9.51057,-1.40291,-2.5,9.51057,-1.81636,-2.18508,9.51057,-2.18508,-1.81636,9.51057,-2.5,-1.40291,9.51057,-2.75336,-0.954915,9.51057,-2.93893,-0.483409,9.51057,-3.05212,0,9.51057,-3.09017,0.483409,9.51057,-3.05212,0.954915,9.51057,-2.93893,1.40291,9.51057,-2.75336,1.81636,9.51057,-2.5,2.18508,9.51057,-2.18508,2.5,9.51057,-1.81636,2.75336,9.51057,-1.40291,2.93893,9.51057,-0.954915,3.05212,9.51057,-0.483409,
		0,10,0
		
		
		
		];
		
		vertexBuffer=makeFloatBuffer(vertexs);
		//インデックスバッファの生成
		indexs=[
		0,1,2,3,6,7,4,5,0,1,//面0
		1,5,3,7,//面1
		0,2,4,6//面2
		];
		indexs=[];
		
		for(let i=0;i<40;i+=1)indexs.push(i);
		for(let i=0;i<40;i+=1){
			indexs.push(i);
			indexs.push(i+40);
		}for(let i=40;i<80;i+=1)indexs.push(i);
		for(let i=40;i<80;i+=1){
			indexs.push(i);
			indexs.push(i+40);
		}
		indexBuffer=makeByteBuffer(indexs);
	},
	
	/*画面サイズ更新時に呼ばれる*/
	onSurfaceChanged(gl10,w,h){
		//ビューポート変換
		gl10.glViewport(0,0,w,h);
		aspect=w/h;
		gl10.glOrthof(-1,1,1/aspect,1/aspect,0.01,100.0);
	},
	
	onDrawFrame(gl10){
		//画面のクリア
		//gl10.glClearColor(0,0,0,0);//1,1,1,1
		gl10.glClear(javax.microedition.khronos.opengles.GL10.GL_COLOR_BUFFER_BIT|javax.microedition.khronos.opengles.GL10.GL_DEPTH_BUFFER_BIT);
		
		
		gl10.glPointSize(20);
		//射影変換
		gl10.glMatrixMode(javax.microedition.khronos.opengles.GL10.GL_PROJECTION);
		gl10.glLoadIdentity();
		android.opengl.GLU.gluPerspective(gl10,
		90.0,//Y方向の画角
		aspect,//アスペクト比
		0.01,//ニアクリップ
		100.0);//ファークリップ
		
		//ビュー変換
		gl10.glMatrixMode(javax.microedition.khronos.opengles.GL10.GL_MODELVIEW);
		gl10.glLoadIdentity();
		android.opengl.GLU.gluLookAt(gl10,
		1.5,5,1.5,//カメラの視点
		2.8,pit,2.8,//カメラの焦点
		0.0,1.0,0);//カメラの上方向
		
		//モデル変換
		gl10.glRotatef(angle++,0,1,0);
		/*
		if(Math.floor(Math.random() * 100)<4){
			xx=Math.floor(Math.random() * 10)/10,
			yy=Math.floor(Math.random() * 10)/10,
			zz=Math.floor(Math.random() * 10)/10;}
		gl10.glScalef(xx,yy,zz);
		gl10.glTranslatef(angle++,x++,y++,z++);
		*/
		//ボックスの描画
		drawBox(gl10);
		}
	
	
});

const ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({
	run(){
		const view=new android.opengl.GLSurfaceView(ctx);
		view.getHolder().setFormat(android.graphics.PixelFormat.TRANSLUCENT);
glView.setEGLConfigChooser(8,8,8,8,0,0);
glView.setZOrderOnTop(true);
glView.setRenderer(renderer);
ctx.setContentView(glView);﻿
}catch(i){print(i);}}}));
